Explain the following definitions. Identify any that are illegal.
(a) int i, *const cp; This is not legal because the `const` pointer `cp` is declared without being initialized. In C++, a `const` pointer must be initialized at the time of its declaration.
(b) int *p1, *const p2; `int *p1` is legal because `p1` is an ordinary pointer that can point to any `int` and be reassigne to point to different `int` variables. `p2` is illegal for the same reason as (a).
(c) const int ic, &r = ic; A `const` variable must be initialized at the time of its declaration because once declared as `const`, its value cannot be changed. Without initialization, this line is illegal.
(d) const int *const p3; Again, illegal because the `const` pointer is not initialized at the time of its declaration.
(e) const int *p; This is legal. It declares `p` as a pointer to a `const int`. The pointer `p` can be reassigned to point to different addresses, but the value at the address it points to cannot be modified through `p`. While legal, you should initialize the pointer before using it to avoid undefined behavior.